, Country_Region_City__c FROM Survey__c WHERE Id IN :surveyIds];
        for(Survey__c survey : surveyList) {
            survey.Country_Region_City__c = 'Country, Region, and City';
        }
        update surveyList;
    }
}

<?xml version="1.0" encoding="UTF-8"?>
<ApexTrigger xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>50.0</apiVersion>
    <status>Active</status>
    <description>Admin Survey Trigger</description>
    <triggerName>AdminSurveyTrigger</triggerName>
    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ApexTrigger xmlns="http://soap.sforce.com/2006/04/metadata"&gt;
    &lt;apiVersion&gt;50.0&lt;/apiVersion&gt;
    &lt;status&gt;Active&lt;/status&gt;
    &lt;description&gt;Admin Survey Trigger&lt;/description&gt;
    &lt;triggerName&gt;AdminSurveyTrigger&lt;/triggerName&gt;
    &lt;content&gt;
    //List to store the Ids
    List&lt;Id&gt; surveyIds = new List&lt;Id&gt;();
    
    //Get the survey Ids
    if(Trigger.isInsert) {
        for(Survey__c survey : Trigger.new) {
            surveyIds.add(survey.Id);
        }
    }
    else if(Trigger.isUpdate) {
        for(Survey__c survey : Trigger.new) {
            surveyIds.add(survey.Id);
        }
    }
    else if(Trigger.isDelete) {
        for(Survey__c survey : Trigger.old) {
            surveyIds.add(survey.Id);
        }
    }
    
    //Set the Domain as India, USA, or Both from a dropdown list
    if(Trigger.isInsert || Trigger.isUpdate) {
        List&lt;Survey__c&gt; surveyList = [SELECT Id, Domain__c FROM Survey__c WHERE Id IN :surveyIds];
        for(Survey__c survey : surveyList) {
            survey.Domain__c = 'India, USA, or Both';
        }
        update surveyList;
    }
    
    //Set the Status of the survey as Active or Inactive from a dropdown list
    if(Trigger.isInsert || Trigger.isUpdate) {
        List&lt;Survey__c&gt; surveyList = [SELECT Id, Status__c FROM Survey__c WHERE Id IN :surveyIds];
        for(Survey__c survey : surveyList) {
            survey.Status__c = 'Active or Inactive';
        }
        update surveyList;
    }
    
    //Set the Survey State as Not Started, Started, Cancelled, or Completed from a dropdown list
    if(Trigger.isInsert || Trigger.isUpdate) {
        List&lt;Survey__c&gt; surveyList = [SELECT Id, State__c FROM Survey__c WHERE Id IN :surveyIds];
        for(Survey__c survey : surveyList) {
            survey.State__c = 'Not Started, Started, Cancelled, or Completed';
        }
        update surveyList;
    }
    
    //Set the Page Name or Location as Home, Profile, Search Post, Post detail, or Webinar Detail from a dropdown list
    if(Trigger.isInsert || Trigger.isUpdate) {
        List&lt;Survey__c&gt; surveyList = [SELECT Id, Page_Name_or_Location__c FROM Survey__c WHERE Id IN :surveyIds];
        for(Survey__c survey : surveyList) {
            survey.Page_Name_or_Location__c = 'Home, Profile, Search Post, Post detail, or Webinar Detail';
        }
        update surveyList;
    }
    
    //Set the Target Users from All Users or Exclude Users from a dropdown list
    if(Trigger.isInsert || Trigger.isUpdate) {
        List&lt;Survey__c&gt; surveyList = [